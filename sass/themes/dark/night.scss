@import "base";

// GENERAL
$text:                 rgb( 230, 230, 230);
$textShadow:           rgb( 8,   8,   8);
$border:               rgb( 2,   2,   2);
$background:           rgb( 58,  58,  58);
$sidebarBackground:    rgb( 92,  92,  92);
$copyright:            rgba(35,  35,  35,  0.9);
$overlay:              rgba(0,   0,   0,   0.3);
$scrollbar:            rgb( 60,  60,  60);

// INPUT
$inputBackground:      rgb( 41,  41,  41);
$inputAddOnBackground: rgb( 50,  50,  50);
$inputBorder:          rgb( 15,  15,  15);
$inputText:            rgb( 230, 230, 230);
$inputPlaceholder:     rgb( 172, 172, 172);
$inputError:           rgb( 255, 0,   0);
$inputFocus:           rgba(82, 168, 236, 0.6);

// BUTTON
$btnBackground:        rgb( 34,  34,  34);
$btnBackgroundFade:    rgb( 68,  68,  68);
$btnShadow:            rgb( 0,   0,   0);
$btnHover:             rgba(0,   0,   0,  0.15);

// PATHWAY
$source:               rgb( 82,  117, 255);
$destination:          rgb( 233, 25,  44);
$reactionBorder:       rgb( 22,  22,  22);
$lacking:              rgba(121, 0,   0,   0.3);
$limitingReagent:      rgba(0,   0,   121, 0.3);

// RESOURCE
$elementBackground:    rgb( 76,  76,  76);
$elementBorder:        rgb( 48,  48,  48);
$elementText:          rgb( 2,   2,   2);
$increase:             rgb( 72,  144, 229);
$decrease:             rgb( 232, 12,  15);
$softLimit:            rgba(210, 0,   0,   0.4);
$hardLimit:            rgba(35,  35,  35,  0.9);

// TRACKER
$trackerHeaderBorder:  rgb( 95,  95,  95);
$trackerOrganBorder:   rgb( 81,  81,  81);
$trackerActive:        lighten($background, 1.75%);

// HEADER
$resourceGood:         rgba(0,   121, 0,   0.3);
$resourceBad:          rgba(161, 0,   0,   0.3);

// WELCOME
$optionBackground:     rgba(255, 255, 255, 0.03);
$optionBorder:         rgb( 35,  35,  35);
$labelBorder:          rgba(0,   0,   0,   0.25);

body[theme=night] {
    background-color: $background;

    p, h1, h2, h3, h4, h5, h6, label {
        color: $text;
        text-shadow: 1px 1px $textShadow;
    }

    input[type=text], input[type=password], input[type=email] {
        border-color: $inputBorder;
        color: $inputText;
        background-color: $inputBackground;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        @include input-placeholder {
            color: $inputPlaceholder;
        }

        &:focus {
            border-color: $inputFocus;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px $inputFocus;

            &.error {
                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px $inputError;
            }
        }

        &.error {
            border-color: $inputError;
            color: $inputError;
        }
    }

    .btn {
        color: $text;
        text-shadow: 1px 1px $textShadow;
        background-image: linear-gradient(to bottom, $btnBackgroundFade, $btnBackground);
        border-color: $btnBackground;
        border-bottom-color: $btnShadow;

        &:hover,
        &:active,
        &.active {
            box-shadow: inset 0 0 7px $btnHover, 0 0 3px $btnHover;
        }

        &:active,
        &.active,
        &.disabled,
        &[disabled] {
            background-color: $btnBackground;
            background-image: none;
        }
    }

    .add-on {
        border-color: $inputBorder !important;
        background: $inputAddOnBackground !important;
    }

    .overlay {
        background-color: $overlay;

        .window {
            background-color: $background;
            border-color: $border;

            .header {
                border-color: $border;
            }
        }
    }

    .jspVerticalBar {
        background-color: $sidebarBackground;

        .jspTrack {
            background-color: $sidebarBackground;

            .jspDrag {
                background-color: $scrollbar;
            }
        }
    }

    #welcome {
        .option {
            border-color: $optionBorder;
            box-shadow: 0 0 10px $optionBorder inset;
            background-color: $optionBackground;

            &:hover {
                .fa {
                    opacity: 0.6;
                }
            }

            label {
                border-color: $labelBorder;
            }

            .fa {
                opacity: 0.8;
            }
        }
    }

    #header {
        background-color: $background;
        border-color: $border;

        .header-element {
            border-color: $border;

            .dropdown {
                background-color: $background;
            }
        }

        #limited-resources {
            td {
                border-color: $reactionBorder;
                color: $text;
            }

            .good {
                background-color: $resourceGood;
            }

            .bad {
                background-color: $resourceBad;
            }
        }
    }

    .sidebar {
        background-color: $sidebarBackground;
        border-color: $border;

        .popup {
            background-color: inherit;
            border-color: $border;
        }

        .accordian-header {
            color: $text;
            border-color: $border;
            background-color: $background;
        }
    }

    .pathway {
        background-color: $elementBackground;
        border-color: $elementBorder;
        @include transition(box-shadow 1s, border-color 1s);

        &.source {
            box-shadow: 0 0 9px $source inset;
            border-color: $source;
        }

        &.destination {
            box-shadow: 0 0 9px $destination inset;
            border-color: $destination;
        }

        p {
            color: $elementText;
            text-shadow: none;
        }

        .reaction {
            color: $elementText;

            td {
                border-color: $reactionBorder;
            }

            .lacking {
                background-color: $lacking;
            }

            .limiting {
                background-color: $limitingReagent;
            }
        }
    }

    .res {
        @include transition(box-shadow 1s);
        background-color: $elementBackground;
        border-color: $elementBorder;

        &.increase {
            box-shadow: 0 0 5px 5px $increase;
        }

        &.decrease {
            box-shadow: 0 0 5px 5px $decrease;
        }

        .bar {
            background-image: linear-gradient(to bottom, #149bdf, #0480be);
            box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
        }

        .soft {
            background-color: $softLimit;
            box-shadow: rgba(0, 0, 0, 0.2) 0 0 1px 1px inset;
        }

        .hard {
            background-color: $hardLimit;
            box-shadow: rgba(0, 0, 0, 0.8) 0 0 2px 2px inset;
        }

        span {
            color: $elementText;
        }
    }

    #footer {
        #minimize-footer {
            background-color: $sidebarBackground;
            border-color: $border;
        }

        #tracker {
            .tracker {
                border-color: $border;
            }

            .header {
                border-color: $trackerHeaderBorder;
            }

            .organ {
                border-color: $trackerOrganBorder;
            }

            .active {
                background-color: $trackerActive;
            }
        }

        #resource-visual {
            .header {
                border-color: $border;
            }
        }
    }
    
    #copyright {
        color: $copyright;
        text-shadow: none;
    }
}