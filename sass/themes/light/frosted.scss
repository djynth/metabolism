@import "base";

$name: 'frosted';

// GENERAL
$text:                   rgb( 80,  80,  80);
$textShadow:             rgb( 230, 230, 230);
$border:                 rgb( 70,  70,  70);
$background:             rgb( 240, 240, 240);
$sidebarBackground:      rgb( 225, 225, 225);
$copyright:              rgba(80,  80,  80,  0.85);
$overlay:                rgba(0,   0,   0,   0.3);
$scrollbar:              rgb( 175, 175, 175);
$errorText:              rgb( 255, 0,   0);
$notificationBackground: rgba(255, 255, 255, 0.25);

// INPUT
$inputBackground:        rgb( 220, 220, 220);
$inputAddOnBackground:   rgb( 225, 225, 225);
$inputBorder:            rgb( 135, 135, 135);
$inputText:              rgb( 85,  85,  85);
$inputPlaceholder:       rgb( 125, 125, 125);
$inputError:             rgb( 255, 0,   0);
$inputFocus:             rgba(82, 168, 236, 0.6);
$inputFocusBorder:       rgb( 0,  94,  168);

// BUTTON
$btnBackground:          rgb( 230, 230, 230);
$btnBackgroundFade:      rgb( 255, 255, 255);
$btnShadow:              rgb( 179, 179, 179);
$btnHover:               rgba(0,   0,   0,  0.1);

// PATHWAY
$source:                 rgb( 82,  117, 255);
$destination:            rgb( 233, 25,  44);
$reactionBorder:         rgb( 130, 130, 130);
$lacking:                rgba(111, 0,   0,   0.25);
$limitingReagent:        rgba(0,   0,   111, 0.25);

// RESOURCE
$elementBackground:      rgb( 200, 200, 200);
$elementBorder:          rgb( 170, 170, 170);
$elementText:            rgb( 55,  55,  55);
$increase:               rgb( 72,  144, 229);
$decrease:               rgb( 232, 12,  15);
$softLimit:              rgba(255, 0,   0,   0.4);
$hardLimit:              rgba(65,  65,  65,  0.9);

// TRACKER
$trackerHeaderBorder:    rgb( 140, 140, 140);
$trackerOrganBorder:     rgb( 160, 160, 160);
$trackerActive:          darken($background, 9%);

// HEADER
$resourceGood:           rgba(0,   130, 0,   0.3);
$resourceBad:            rgba(220, 0,   0,   0.6);

body[theme=#{$name}], .theme[theme=#{$name}] {
    background-color: $background;
    border-color: $border;

    p, h1, h2, h3, h4, h5, h6, label, li {
        color: $text;
        text-shadow: 1px 1px $textShadow;
    }

    input[type=text], input[type=password], input[type=email] {
        border-color: $inputBorder;
        color: $inputText;
        background-color: $inputBackground;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        @include input-placeholder {
            color: $inputPlaceholder;
        }

        &:focus {
            border-color: $inputFocusBorder;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px $inputFocus;

            &.error {
                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px $inputError;
            }
        }

        &.error {
            border-color: $inputError;
            color: $inputError;
        }
    }

    .btn {
        color: $text;
        text-shadow: 1px 1px $textShadow;
        background-image: linear-gradient(to bottom, $btnBackgroundFade, $btnBackground);
        border-color: $btnBackground;
        border-bottom-color: $btnShadow;

        &:hover,
        &:active,
        &.active {
            box-shadow: inset 0 0 7px $btnHover, 0 0 3px $btnHover;
        }

        &:active,
        &.active,
        &.disabled,
        &[disabled] {
            background-color: $btnBackground;
            background-image: none;
        }
    }

    .add-on {
        border-color: $inputBorder;
        background: $inputAddOnBackground;

        &.focus {
            border-color: $inputFocusBorder;
        }
    }

    .overlay {
        background-color: $overlay;

        .window {
            background-color: $background;
            border-color: $border;

            .header {
                border-color: $border;
            }
        }
    }

    .jspVerticalBar {
        background-color: $sidebarBackground;

        .jspTrack {
            background-color: $sidebarBackground;

            .jspDrag {
                background-color: $scrollbar;
            }
        }
    }

    #menu {
        background-color: $background;

        .tabs {
            .tab {
                border-color: $border;
            }

            .tab:not(.active), .space {
                background-color: $sidebarBackground;
            }
        }

        .contents {
            .content {
                &.new-game {
                    .mode {
                        border-color: $border;
                        background-color: $sidebarBackground;
                        @include transition(box-shadow 0.3s);

                        &.active {
                            box-shadow: 0 0 14px $border inset;

                            .fa {
                                opacity: 0.55;
                            }
                        }

                        .fa {
                            @include transition(opacity, 0.3s);
                            opacity: 0.45;
                        }

                        .label {
                            border-color: $border;
                            background-color: $background;
                            opacity: 0.75;
                            text-shadow: none;

                            .details {
                                li {
                                    text-shadow: none;    
                                }
                            }
                        }
                    }
                }

                &.account {
                    .form-info {
                        background-color: $elementBackground;
                        border-color: $elementBorder;
                        color: $elementText;

                        li {
                            color: $elementText;
                            text-shadow: none;
                        }

                        &.error {
                            color: $errorText;
                        }
                    }
                }
            }
        }
    }

    #header {
        background-color: $background;
        border-color: $border;

        .header-element {
            border-color: $border;

            .dropdown {
                background-color: $background;
            }

            .cover {
                background-color: $background;
            }
        }

        #state {
            .tab {
                border-color: $border;
                color: $text;

                &:not(.active) {
                    background-color: $sidebarBackground;
                }
            }

            #limited-resources {
                td {
                    border-color: $reactionBorder;
                    color: $text;
                }

                .good {
                    background-color: $resourceGood;
                }

                .bad {
                    background-color: $resourceBad;
                }
            }
        }

        #log {
            .notifications {
                border-color: $border;
                background-color: $notificationBackground;
            }
        }
    }

    .sidebar {
        background-color: $sidebarBackground;
        border-color: $border;

        .popup {
            background-color: inherit;
            border-color: $border;
        }

        .accordian-header {
            color: $text;
            border-color: $border;
            background-color: $background;
        }
    }

    .pathway {
        background-color: $elementBackground;
        border-color: $elementBorder;
        @include transition(box-shadow 1s, border-color 1s);

        &.source {
            box-shadow: 0 0 9px $source inset;
            border-color: $source;
        }

        &.destination {
            box-shadow: 0 0 9px $destination inset;
            border-color: $destination;
        }

        p {
            color: $elementText;
            text-shadow: none;
        }

        .reaction {
            color: $elementText;

            td {
                border-color: $reactionBorder;
            }

            .lacking {
                background-color: $lacking;
            }

            .limiting {
                background-color: $limitingReagent;
            }
        }
    }

    .res {
        @include transition(box-shadow 1s);
        background-color: $elementBackground;
        border-color: $elementBorder;

        &.increase {
            box-shadow: 0 0 5px 5px $increase;
        }

        &.decrease {
            box-shadow: 0 0 5px 5px $decrease;
        }

        .bar {
            background-image: linear-gradient(to bottom, #149bdf, #0480be);
            box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
        }

        .soft {
            background-color: $softLimit;
            box-shadow: rgba(0, 0, 0, 0.2) 0 0 1px 1px inset;
        }

        .hard {
            background-color: $hardLimit;
            box-shadow: rgba(0, 0, 0, 0.8) 0 0 2px 2px inset;
        }

        span {
            color: $elementText;
        }
    }

    #footer {
        #minimize-footer {
            background-color: $sidebarBackground;
            border-color: $border;
        }

        #tracker {
            .tracker {
                border-color: $border;
            }

            .header {
                border-color: $trackerHeaderBorder;
            }

            .organ {
                border-color: $trackerOrganBorder;
            }

            .active {
                background-color: $trackerActive;
            }
        }

        #resource-visual {
            .header {
                border-color: $border;
            }
        }
    }
}